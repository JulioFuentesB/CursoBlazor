@inject IJSRuntime js



    <div>
        <h3>Peliculas for</h3>

        <input type="checkbox" @bind="MostrarBotones" />

        <ListadoGenerco  Listado="Peliculas">
            <HayRegistros Context="pelicula">
                <PeliculaIndividual Pelicula="pelicula" EliminarPelicula="EliminarPelicula" MostrarBotones="MostrarBotones" />
            </HayRegistros>
        </ListadoGenerco>
    </div>


@code{ 

    [Parameter] public List<Peliculas> Peliculas { get; set; }


    //inicializar un componente
    protected override void OnInitialized()
    {
        Console.WriteLine("OnInitialized");
    }

    //ejecutar una accion cada vez que se cambie un parametro
    protected override void OnParametersSet()
    {
        Console.WriteLine("OnParametersSet");
    }


    //se ejecuta cuando se renderiza el html
    protected override void OnAfterRender( bool primeraRenderizacion)
    {
        Console.WriteLine($"OnAfterRender: primera vez:{primeraRenderizacion}");
    }


    //indicar si se quiere renderizar un componete con unresepcto a un cambio realizado
    protected override bool  ShouldRender()
    {
        Console.WriteLine("OnParametersSet");
        return true;
    }



    bool MostrarBotones = false;

    //Peliculas pelicula = new Peliculas();

    async Task EliminarPelicula(Peliculas pelicula)
    {

        var confirmado = await js.Confirm( $"Desea borrar la pelicula {pelicula.Titulo}?");

        if(confirmado)
        {
            Peliculas.Remove(pelicula);
            Console.WriteLine($"Se ha eliminado la pelicula {pelicula.Titulo}");
        }

    }
    }
