@page "/peliculas/crear"
@inject NavigationManager navigationManager
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensajes

<h3>CrearPelicula</h3>
@if (MostrarFormulario)
{
    <FormularioPeliculas Peliculas="Pelicula" OnValidSubmit="Crear"
                         GenerosNoSeleccionados="GenerosNoseleccionados"></FormularioPeliculas>
}
else
{
    <text>Cargando...</text>
}





@code { private bool MostrarFormulario { get; set; } = false;

    private Peliculas Pelicula = new Peliculas();
    private List<Generos> GenerosNoseleccionados = new List<Generos>();

    protected async override Task OnInitializedAsync()
    {
        var responseHttp = await repositorio.Get<List<Generos>>("api/generos");
        GenerosNoseleccionados = responseHttp.Response;
        MostrarFormulario = true;
    }


    async Task Crear()
    {

        var httpResponse = await repositorio.Post<Peliculas, int>("api/peliculas", Pelicula);

        if (httpResponse.Error)
        {
            var mensajeError = await httpResponse.GetBody();
            await mostrarMensajes.MostrarMensajeError(mensajeError);
        }
        else
        {

            var PeliculaId = httpResponse.Response;
            navigationManager.NavigateTo($"/peliculas/{PeliculaId}/{Pelicula.Titulo.Replace("", "-")}");

            //Console.WriteLine(navigationManager.Uri);
            //navigationManager.NavigateTo("pelicula");
        }
    }
}