@inject IRepositorio Repositorio

<EditForm Model="Peliculas" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Título:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Peliculas.Titulo" />
            <ValidationMessage For="@(() => Peliculas.Titulo)" />
        </div>
    </div>
    <div class="form-group">
        <label>En cartelera:</label>
        <div>
            <InputCheckbox @bind-Value="@Peliculas.EnCines" />
            <ValidationMessage For="@(() => Peliculas.EnCines)" />
        </div>
    </div>
    <div class="form-group">
        <label>Trailer:</label>
        <div>
            <InputText class="form-control" @bind-Value="@Peliculas.Trailer" />
            <ValidationMessage For="@(() => Peliculas.Trailer)" />
        </div>
    </div>
    <div class="form-group">
        <label>Fecha Lanzamiento:</label>
        <div>
            <InputDate class="form-control" @bind-Value="@Peliculas.FechaLanzamiento" />
            <ValidationMessage For="@(() => Peliculas.FechaLanzamiento)" />
        </div>
    </div>
    <div class="form-group form-markdown">
        <InputMarkdown @bind-Value="@Peliculas.Resumen"
                       For="@(() => Peliculas.Resumen)"
                       Label="Resumen" />
    </div>
    <div class="form-group">
        <InputImg Label="Foto" ImagenSeleccionada="ImagenSeleccionada" ImagenURL="@posterTemporal" />
    </div>
    <div class="form-group">
        <label>Géneros:</label>
        <div>
            <SelectorMultiple Seleccionados="Seleccionados"
                              NoSeleccionados="NoSeleccionados"></SelectorMultiple>
        </div>
    </div>
    <div class="form-group">
            <label>Actores:</label>
            <div>
                <SelectorMultipleTypeahead Context="persona"
                                           SearchMethod="BuscarActores"
                                           ElementosSeleccionados="ActoresSeleccionados">
                    <MyListTemplate>
                        @persona.Nombre
                    </MyListTemplate>
                    <MyResultTemplate>
                        <img style="width: 50px" src="@persona.Foto" />
                        @persona.Nombre
                    </MyResultTemplate>
                </SelectorMultipleTypeahead>
            </div>
        </div>

    <button type="submit" class="btn btn-success">Salvar Película</button>
</EditForm>

@code { 
    [Parameter] public Peliculas Peliculas { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public List<Generos> GenerosSeleccionados { get; set; } = new List<Generos>();
    [Parameter] public List<Generos> GenerosNoSeleccionados { get; set; } = new List<Generos>();
    [Parameter] public List<Actores> ActoresSeleccionados { get; set; } = new List<Actores>();

    private List<SelectorMultipleModel> Seleccionados { get; set; } = new List<SelectorMultipleModel>();
    private List<SelectorMultipleModel> NoSeleccionados { get; set; } = new List<SelectorMultipleModel>();
    private string posterTemporal;

    protected override void OnInitialized()
    {
        Seleccionados = GenerosSeleccionados.Select(x => new SelectorMultipleModel(x.Id.ToString(), x.Nombre)).ToList();
        NoSeleccionados = GenerosNoSeleccionados.Select(x => new SelectorMultipleModel(x.Id.ToString(), x.Nombre)).ToList();
        if (!string.IsNullOrWhiteSpace(Peliculas.Poster))
        {
            posterTemporal = Peliculas.Poster;
            Peliculas.Poster = null;
        }
    }

    private void ImagenSeleccionada(string imagenBase64)
    {
        Peliculas.Poster = imagenBase64;
    }

    private async Task<IEnumerable<Actores>> BuscarActores(string searchText)
    {
        //return new List<Personas>()
        //    {
        //    new Personas(){Id=1, Nombre="Tom Holland", Foto = "https://m.media-amazon.com/images/M/MV5BNTAzMzA3NjQwOF5BMl5BanBnXkFtZTgwMDUzODQ5MTI@._V1_UY317_CR23,0,214,317_AL_.jpg"},
        //    new Personas(){Id=2, Nombre="Tom Hanks", Foto = "https://m.media-amazon.com/images/M/MV5BMTQ2MjMwNDA3Nl5BMl5BanBnXkFtZTcwMTA2NDY3NQ@@._V1_UY317_CR2,0,214,317_AL_.jpg"}
        //};

        var responseHttp = await Repositorio.Get<List<Actores>>($"api/personas/buscar/{searchText}");
        return responseHttp.Response;
    }
   }

